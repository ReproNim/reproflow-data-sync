from datetime import datetime
from typing import Tuple, Optional, List
from pydantic import BaseModel, Field

# placeholder for common code to be used in the dump scripts
# data model, functions, etc.


######################################################################
# Data models

# Pydantic model for reproevents record
class ReproeventsRecord(BaseModel):
    type: Optional[str] = Field("ReproeventsRecord", description="JSON record type/class")
    isotime: Optional[datetime] = Field(
        None, description="Reference time bound to NTP in isotime format, "
                          "reproevents clock")
    session_id: Optional[str] = Field(
        None, description="Unique session identifier generated by "
                          "collect_data.sh script, e.g. ses-20240528")
    id: Optional[str] = Field(None, description="Object unique ID")
    file_name: Optional[str] = Field(None, description="File name of the "
                                                       "reproevents CSV file for "
                                                       "reference purposes")
    state: Optional[int] = Field(None, description="State of the reproevent")
    # contains reproevent data like:
    #     callback_duration_us, state, client_time,
    #     client_time_iso, pin, callback_duration,
    #     server_time, action,
    #     roundtrip_delay, id
    data: Optional[dict] = Field(None, description="Data record from original "
                                                   "reproevents CSV file "
                                                   "converted to JSON")
